
* Backend

Have implemented (most) CRUD REST API endpoints, but probably should have some more specialized ones to avoid a lot of logic on the frontend.

Two main tasks:
 - Start an exercise and register exercises.

   Idea of flow: "start session with exercise X".

   For every set, register the repetitions.
   
 - Look at graphs of progress.

Features?

 - Suggest weight next time based on how long ago + if success last time.
 
* Frontend

Clojurescript + Reagent.

Runs on port `127.0.0.1:3001`.

** Todos [0/4]

*** TODO Show stored exercises  

*** TODO Create exercises

*** TODO Create sessions

*** TODO Visualize progress

** Resources

Examle [[https://github.com/reagent-project/reagent/blob/a14faba55e373000f8f93edfcfce0d1222f7e71a/examples/todomvc/src/todomvc/core.cljs][TODO MVC app]].

* Data Model

#+begin_src plantuml :file data_model.png :exports both

!define Table(name) class name as "name" << (T,#FFAAAA) >>
!define primary_key(x) <b><&key> <u>x</u></b>
!define foreign_key(x, table, field) <u>x</u> <&key><b>table.field</b>


skinparam class {
    BackgroundColor #EAEAEA
    BorderColor #AAAAAA
}


Table(session) {
  primary_key(session_id) int
  date int
  place str
  shape str
}

Table(exercise) {
  primary_key(exercise_id) int
  name str
  description str
  goal_reps int
  goal_number_of_sets int
}

Table(workout) {
  primary_key(workout_id) int
  foreign_key(session_id, session, session_id)
  foreign_key(exercise_id, exercise, exercise_id)
}

Table(set) {
  primary_key(set_id) int
  reps int
  weight float
  foreign_key(workout_id, workout, workout_id)
}

workout }o--|| exercise
workout }|--|| set

session  }|--|| workout
#+end_src

#+RESULTS:
[[file:data_model.png]]
